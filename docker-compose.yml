version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    env_file: .env
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres

  api:
    build: ./api
    container_name: fastapi_service
    restart: always
    depends_on:
      - postgres
    env_file: .env
    ports:
      - "8000:8000"

  streamlit:
    build: ./streamlit_app
    container_name: streamlit_ui
    restart: always
    depends_on:
      - api
    ports:
      - "8501:8501"

  airflow-webserver:
    build: ./airflow
    container_name: airflow_web
    restart: always
    env_file:
      - .env
    depends_on:
      - postgres
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://mlops_user:mlops_pass@postgres/mlops_db
      AIRFLOW__CORE__FERNET_KEY: ${FERNET_KEY}
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "False"
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./airflow:/opt/airflow/custom
      - ./raw-data:/opt/airflow/raw-data
      - ./good_data:/opt/airflow/good_data
      - ./bad_data:/opt/airflow/bad_data
    ports:
      - "8080:8080"
    command: webserver

  airflow-scheduler:
    build: ./airflow
    container_name: airflow_scheduler
    restart: always
    env_file:
      - .env
    depends_on:
      - airflow-webserver
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://mlops_user:mlops_pass@postgres/mlops_db
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./airflow:/opt/airflow/custom
      - ./raw-data:/opt/airflow/raw-data
      - ./bad_data:/opt/airflow/bad_data
      - ./good_data:/opt/airflow/good_data
    command: scheduler

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: always
    depends_on:
      - postgres
    ports:
      - "3001:3000"
    volumes:
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - ./grafana/provisioning:/etc/grafana/provisioning

volumes:
  pgdata:
